Index: test/src/fe_launch_smoketest.cxx
===================================================================
--- test/src/fe_launch_smoketest.cxx	(revision 497)
+++ test/src/fe_launch_smoketest.cxx	(working copy)
@@ -270,6 +270,30 @@
                "[LMON_FE] launching the job/daemons via %s\n",
                mylauncher);
     }
+  else if (rmenv_str == std::string("RC_mpich"))
+    {
+      launcher_argv    = (char **) malloc(5*sizeof(char*));
+      launcher_argv[0] = strdup(mylauncher);
+      launcher_argv[1] = strdup("-np");
+      launcher_argv[2] = strdup(argv[2]);
+      launcher_argv[3] = strdup(argv[1]);
+      launcher_argv[4] = NULL;
+      fprintf (stdout,
+               "[LMON_FE] launching the job/daemons via %s\n",
+               mylauncher);
+    }
+  else if (rmenv_str == std::string("RC_mpirun_rsh"))
+  {
+      launcher_argv    = (char **) malloc(5*sizeof(char*));
+      launcher_argv[0] = strdup(mylauncher);
+      launcher_argv[1] = strdup("-np");
+      launcher_argv[2] = strdup(argv[2]);
+      launcher_argv[3] = strdup(argv[1]);
+      launcher_argv[4] = NULL;
+      fprintf (stdout,
+               "[LMON_FE] launching the job/daemons via %s\n",
+               mylauncher);
+  }
 
   if ( ( rc = LMON_fe_init ( LMON_VERSION ) ) 
               != LMON_OK )
Index: launchmon/src/lmon_api/lmon_api_std.h
===================================================================
--- launchmon/src/lmon_api/lmon_api_std.h	(revision 497)
+++ launchmon/src/lmon_api/lmon_api_std.h	(working copy)
@@ -117,6 +117,8 @@
   RC_alps,
   RC_orte,
   RC_gupc,
+  RC_mpich,
+  RC_mpirun_rsh,
   RC_none
   /*
     new RMs should be added here as LaunchMON is ported 
Index: launchmon/src/rm_mpirun_rsh.conf
===================================================================
--- launchmon/src/rm_mpirun_rsh.conf	(revision 0)
+++ launchmon/src/rm_mpirun_rsh.conf	(revision 0)
@@ -0,0 +1,8 @@
+RM=mpirun_rsh
+RM_MPIR=STD
+RM_launcher=mpirun_rsh
+RM_launcher_id=RM_launcher|sym|mpispawn_checkin
+RM_launch_helper=mpirun_rsh
+RM_signal_for_kill=SIGINT
+RM_fail_detection=false
+RM_launch_str=-np %n -hostfile %l %d %o --lmonsharedsec=%s --lmonsecchk=%c
\ No newline at end of file
Index: launchmon/src/sdbg_rm_map.cxx
===================================================================
--- launchmon/src/sdbg_rm_map.cxx	(revision 497)
+++ launchmon/src/sdbg_rm_map.cxx	(working copy)
@@ -245,6 +245,14 @@
     {
       rm = RC_gupc;
     }
+  else if (v == std::string("mpich"))
+    {
+      rm = RC_mpich;
+    }
+  else if (v == std::string("mpirun_rsh"))
+    {
+      rm = RC_mpirun_rsh;
+    }
   else
     {
       rm = RC_none;
Index: launchmon/src/rm_info.conf
===================================================================
--- launchmon/src/rm_info.conf	(revision 497)
+++ launchmon/src/rm_info.conf	(working copy)
@@ -39,6 +39,8 @@
 rm_slurm.conf
 rm_openrte.conf
 rm_mchecker.conf
+rm_mpich.conf
+rm_mpirun_rsh.conf
 
 [linux-x86_64]
 rm_slurm.conf
@@ -46,6 +48,8 @@
 rm_alps.conf
 rm_mchecker.conf
 rm_gupc.conf
+rm_mpich.conf
+rm_mpirun_rsh.conf
 
 [linux-power]
 rm_bglrm.conf
Index: launchmon/src/rm_mpich.conf
===================================================================
--- launchmon/src/rm_mpich.conf	(revision 0)
+++ launchmon/src/rm_mpich.conf	(revision 0)
@@ -0,0 +1,8 @@
+RM=mpich
+RM_MPIR=STD
+RM_launcher=mpiexec.hydra
+RM_launcher_id=RM_launcher|sym|HYD_ui_mpich_info
+RM_launch_helper=mpiexec.hydra
+RM_signal_for_kill=SIGINT
+RM_fail_detection=false
+RM_launch_str=-n %n -f %l %d %o --lmonsharedsec=%s --lmonsecchk=%c
\ No newline at end of file
Index: launchmon/src/linux/lmon_api/lmon_be_sync_mpi.cxx
===================================================================
--- launchmon/src/linux/lmon_api/lmon_be_sync_mpi.cxx	(revision 497)
+++ launchmon/src/linux/lmon_api/lmon_be_sync_mpi.cxx	(working copy)
@@ -127,6 +127,8 @@
     case RC_orte:
     case RC_alps:
     case RC_gupc:
+    case RC_mpich:
+    case RC_mpirun_rsh:
       //
       // Call generic Linux init
       //
@@ -183,6 +185,8 @@
     case RC_orte:
     case RC_alps:
     case RC_gupc:
+    case RC_mpich:
+    case RC_mpirun_rsh:
       //
       // Call generic Linux stop
       //
@@ -251,6 +255,8 @@
     case RC_orte:
     case RC_alps:
     case RC_gupc:
+    case RC_mpich:
+    case RC_mpirun_rsh:
       //
       // Call generic Linux run
       //
@@ -316,6 +322,8 @@
     case RC_orte:
     case RC_alps:
     case RC_gupc:
+    case RC_mpich:
+    case RC_mpirun_rsh:
       //
       // Call generic Linux initdone
       //
@@ -372,6 +380,8 @@
     case RC_orte:
     case RC_alps:
     case RC_gupc:
+    case RC_mpich:
+    case RC_mpirun_rsh:
       //
       // You need to do nothing for these resource managers
       //
@@ -432,6 +442,8 @@
     case RC_orte:
     case RC_alps:
     case RC_gupc:
+    case RC_mpich:
+    case RC_mpirun_rsh:
       //
       // You need to do nothing for these resource managers
       //
